package edu.uga.cs.statecapitalsquiz;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.DatabaseUtils;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;

/**
 * This class is facilitates storing and restoring job leads stored.
 */
public class QuizData {

    public static final String DEBUG_TAG = "QuizData";

    // this is a reference to our database; it is used later to run SQL commands
    private SQLiteDatabase db;
    public QuizDBHelper quizDbHelper;
    private static final String[] allColumns = {
            QuizDBHelper.QUIZ_COLUMN_ID,
            QuizDBHelper.QUIZ_COLUMN_QUESTION,
            QuizDBHelper.QUIZ_COLUMN_ANSWER,
            QuizDBHelper.QUIZ_COLUMN_XANSWER1,
            QuizDBHelper.QUIZ_COLUMN_XANSWER2
    };

    public QuizData(Context context) {
        this.quizDbHelper = QuizDBHelper.getInstance(context);
    }

    // Open the database
    public void open() {
        db = quizDbHelper.getWritableDatabase();
        Log.d(DEBUG_TAG, "QuizData: db open");
    }

    // Close the database
    public void close() {
        if (quizDbHelper != null) {
            quizDbHelper.close();
            Log.d(DEBUG_TAG, "QuizData: db closed");
        }
    }

    public boolean isDBOpen() {
        return db.isOpen();
    }

    public long numOfRows() {
        db = quizDbHelper.getReadableDatabase();
        long count = DatabaseUtils.queryNumEntries(db, "quiz");
        db.close();
        return count;
    }

    public Quiz storeQuiz( Quiz quiz ) {

        // Prepare the values for all of the necessary columns in the table
        // and set their values to the variables of the JobLead argument.
        // This is how we are providing persistence to a JobLead (Java object) instance
        // by storing it as a new row in the database table representing job leads.



        ContentValues values = new ContentValues();
        values.put( QuizDBHelper.QUIZ_COLUMN_QUESTION, quiz.getQuestion());
        values.put( QuizDBHelper.QUIZ_COLUMN_ANSWER, quiz.getAnswer() );
        values.put( QuizDBHelper.QUIZ_COLUMN_XANSWER1, quiz.getXanswer1());
        values.put( QuizDBHelper.QUIZ_COLUMN_XANSWER2, quiz.getXanswer2() );

        // Insert the new row into the database table;
        // The id (primary key) is automatically generated by the database system
        // and returned as from the insert method call.
        long id = db.insert( QuizDBHelper.TABLE_QUIZ, null, values );

        // store the id (the primary key) in the JobLead instance, as it is now persistent
        quiz.setId( id );

        Log.d( DEBUG_TAG, "Stored new quiz with id: " + String.valueOf( quiz.getId() ) );

        return quiz;
    }
}